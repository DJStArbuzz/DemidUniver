#include <iostream>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <algorithm>

using namespace std;

bool binSearch(vector<int>& list, int tmp) {
	int l = 0, mid;
	int r = list.size() - 1;

	while (r - l > 1) {
		mid = (r + l) / 2;
		if (list[mid] > tmp) {
			r = mid;
		}
		else {
			l = mid;
		}
	}

	return list[l] == tmp || list[l + 1] == tmp;
}

int search(vector<int>& list1, vector<int>& list2, vector<int>& list3) {
	int res = 0;

	for (int i = 0; i < list1.size(); i++) {
		if (binSearch(list2, list1[i]) && binSearch(list3, list1[i])) {
			res++;
		}
	}

	return res;
}

int main() {
	int n1, n2, n3;
	
	cin >> n1;
	vector<int> list1(n1);
	for (int i = 0; i < n1; i++) {
		cin >> list1[i];
	}

	cin >> n2;
	vector<int> list2(n2);
	for (int i = 0; i < n2; i++) {
		cin >> list2[i];
	}

	cin >> n3;
	vector<int> list3(n3);
	for (int i = 0; i < n3; i++) {
		cin >> list3[i];
	}

	int res;
	if (n1 <= n2 && n1 <= n3) {
		res = search(list1, list2, list3);
	}
	else if (n2 <= n1 && n2 <= n3) {
		res = search(list2, list1, list3);
	}
	else if (n3 <= n2 && n3 <= n1) {
		res = search(list3, list2, list1);
	}

	cout << res;
	return 0;
}
