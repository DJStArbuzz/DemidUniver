#include <iostream>
#include <cmath>
#include <vector>
#include <string>

using namespace std;

void my_pow(double& t, double& p, long long& sum) {
	while (t < p) {
		t *= 2;
		sum++;
	}
}

void solve() {
	long long n;
	cin >> n;
	vector<long long> vec(n);
	for (int i = 0; i < n; i++) {
		cin >> vec[i];
	}
	long long sum = 0;
	for (int i = 0; i < n - 1; i++) {
		long long k1 = vec[i];
		long long k2 = vec[i + 1];
		if (k1 > k2) {
			swap(k1, k2);
		}
		double p = double(k1) / double(k2);
		double t = 2;
		my_pow(t, p, sum);
	}
	cout << sum << '\n';
}


int main() {
	long long t;
	cin >> t;
	for (int k = 0; k < t; k++) {
		int n;
		cin >> n;
		vector<long long> vec(n);
		for (int i = 0; i < n; i++) {
			cin >> vec[i];
		}
		long long sum = 0;
		for (int i = 0; i < n - 1; i++) {
			long long k1 = vec[i];
			long long k2 = vec[i + 1];
			if (k1 < k2) {
				swap(k1, k2);
			}
			double p = double(k1) / k2;
			double t = 2;
			my_pow(t, p, sum);
		}
		cout << sum << '\n';
		
	}

}
